spring:
  application:
    name: smart-jarvis-gateway
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: task-service
          uri: lb://task-service
          predicates:
            - Path=/api/v1/tasks/**
          filters:
            - name: CircuitBreaker
              args:
                name: task-service-circuit-breaker
                fallbackUri: forward:/fallback/task-service
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 100
                redis-rate-limiter.burstCapacity: 200
                key-resolver: "#{@userKeyResolver}"
        - id: nlp-engine
          uri: lb://nlp-engine
          predicates:
            - Path=/api/v1/nlp/**
          filters:
            - name: CircuitBreaker
              args:
                name: nlp-engine-circuit-breaker
                fallbackUri: forward:/fallback/nlp-engine
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 50
                redis-rate-limiter.burstCapacity: 100
                key-resolver: "#{@userKeyResolver}"
        - id: speech-service
          uri: lb://speech-service
          predicates:
            - Path=/api/v1/speech/**
          filters:
            - name: CircuitBreaker
              args:
                name: speech-service-circuit-breaker
                fallbackUri: forward:/fallback/speech-service
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 30
                redis-rate-limiter.burstCapacity: 60
                key-resolver: "#{@userKeyResolver}"

server:
  port: ${SERVER_PORT:8080}

management:
  endpoints:
    web:
      exposure:
        include: health,info,gateway,metrics
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true

logging:
  level:
    com.smartjarvis.gateway: ${LOG_LEVEL:INFO}
    org.springframework.cloud.gateway: ${GATEWAY_LOG_LEVEL:INFO}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Gateway specific configuration
gateway:
  security:
    enabled: ${GATEWAY_SECURITY_ENABLED:false}
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:*}
    allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
    allowed-headers: ${CORS_ALLOWED_HEADERS:*}
    allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}
    max-age: ${CORS_MAX_AGE:3600}
  rate-limiter:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: ${REDIS_DATABASE:0}
  circuit-breaker:
    enabled: ${CIRCUIT_BREAKER_ENABLED:true}
    timeout: ${CIRCUIT_BREAKER_TIMEOUT:5000}
    error-threshold: ${CIRCUIT_BREAKER_ERROR_THRESHOLD:5}
    success-threshold: ${CIRCUIT_BREAKER_SUCCESS_THRESHOLD:2}

# Service discovery
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVICE_URL:http://localhost:8761/eureka/}
    register-with-eureka: ${REGISTER_WITH_EUREKA:true}
    fetch-registry: ${FETCH_REGISTRY:true}
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}