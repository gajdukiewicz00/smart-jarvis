spring:
  application:
    name: smart-jarvis-task-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/smartjarvis}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:update}
    show-sql: ${JPA_SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  cloud:
    discovery:
      enabled: ${EUREKA_ENABLED:true}

server:
  port: ${SERVER_PORT:8081}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.smartjarvis.taskservice: ${LOG_LEVEL:INFO}
    org.springframework.web: ${WEB_LOG_LEVEL:INFO}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Task Service specific configuration
task:
  service:
    max-title-length: ${TASK_MAX_TITLE_LENGTH:255}
    max-description-length: ${TASK_MAX_DESCRIPTION_LENGTH:1000}
    default-priority: ${TASK_DEFAULT_PRIORITY:MEDIUM}
    overdue-check-enabled: ${TASK_OVERDUE_CHECK_ENABLED:true}
    due-soon-hours: ${TASK_DUE_SOON_HOURS:24}

# Service discovery
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVICE_URL:http://localhost:8761/eureka/}
    register-with-eureka: ${REGISTER_WITH_EUREKA:true}
    fetch-registry: ${FETCH_REGISTRY:true}
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port} 