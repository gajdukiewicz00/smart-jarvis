version: '3.8'

services:
  # Redis for Rate Limiting
  redis:
    image: redis:7-alpine
    container_name: jarvis-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - jarvis-network
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: jarvis-postgres
    environment:
      POSTGRES_DB: jarvis_db
      POSTGRES_USER: jarvis_user
      POSTGRES_PASSWORD: jarvis_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - jarvis-network
    restart: unless-stopped

  # Task Service (Spring Boot)
  task-service:
    build:
      context: ..
      dockerfile: docker/Dockerfile.task
    container_name: jarvis-task-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/jarvis_db
      SPRING_DATASOURCE_USERNAME: jarvis_user
      SPRING_DATASOURCE_PASSWORD: jarvis_password
      TASK_SERVICE_PORT: 8081
    ports:
      - "8081:8081"
    depends_on:
      - postgres
    networks:
      - jarvis-network
    restart: unless-stopped

  # NLP Engine (Node.js/TypeScript)
  nlp-engine:
    build:
      context: ../nlp-engine
      dockerfile: ../docker/Dockerfile.nlp
    container_name: jarvis-nlp-engine
    environment:
      NODE_ENV: production
      NLP_ENGINE_PORT: 8082
      TASK_SERVICE_URL: http://task-service:8081/api/v1
    ports:
      - "8082:8082"
    depends_on:
      - task-service
    networks:
      - jarvis-network
    restart: unless-stopped

  # Speech Service (Python/FastAPI)
  speech-service:
    build:
      context: ../speech-service
      dockerfile: Dockerfile
    container_name: jarvis-speech-service
    environment:
      SPEECH_SERVICE_PORT: 8083
      NLP_ENGINE_URL: http://nlp-engine:8082
    ports:
      - "8083:8083"
    volumes:
      - speech_audio:/app/audio
    depends_on:
      - nlp-engine
    networks:
      - jarvis-network
    restart: unless-stopped

  # Gateway Service (Spring Cloud Gateway)
  gateway:
    build:
      context: ..
      dockerfile: docker/Dockerfile.gateway
    container_name: jarvis-gateway
    environment:
      SPRING_PROFILES_ACTIVE: docker
      GATEWAY_PORT: 8080
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - task-service
      - nlp-engine
      - speech-service
    networks:
      - jarvis-network
    restart: unless-stopped

  # Monitoring - Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: jarvis-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - jarvis-network
    restart: unless-stopped

volumes:
  postgres_data:
  speech_audio:
  grafana_data:
  redis_data:

networks:
  jarvis-network:
    driver: bridge
