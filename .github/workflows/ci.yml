name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Python Services Matrix
  python-matrix:
    name: Python ${{ matrix.python-version }} - ${{ matrix.service }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
        service: ['speech-service']
    defaults:
      run:
        working-directory: ${{ matrix.service }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ruff flake8 pytest

      - name: Lint with ruff
        run: ruff check . --output-format=github

      - name: Lint with flake8
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Run tests
        run: pytest -q --tb=short

  # Node.js Services Matrix  
  node-matrix:
    name: Node ${{ matrix.node-version }} - ${{ matrix.service }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18', '20']
        service: ['nlp-engine']
    defaults:
      run:
        working-directory: ${{ matrix.service }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Lint with ESLint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Run tests
        run: npm test

  # Java Services Matrix
  java-matrix:
    name: Java ${{ matrix.java-version }} - ${{ matrix.module }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: ['17', '21']
        module: ['jarvis-desktop', 'task-service']
    defaults:
      run:
        working-directory: ${{ matrix.module }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ matrix.java-version }}
          cache: maven

      - name: Run tests
        run: mvn -q -DskipTests=false test

      - name: Build
        run: mvn -q -DskipTests package

  # Docker Build Smoke Tests
  docker-build:
    name: Docker Build Smoke
    runs-on: ubuntu-latest
    needs: [python-matrix, node-matrix, java-matrix]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build speech-service
        run: |
          cd speech-service
          docker build -t speech-service:test .

      - name: Build nlp-engine
        run: |
          cd nlp-engine
          docker build -t nlp-engine:test .

      - name: Build jarvis-desktop
        run: |
          cd jarvis-desktop
          docker build -t jarvis-desktop:test .

      - name: Build task-service
        run: |
          cd task-service
          docker build -t task-service:test .

  # Security Scan
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: [docker-build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'speech-service:test'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

  # CodeQL Analysis
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, typescript, python, java

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
