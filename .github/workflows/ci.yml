name: CI

on:
  push:
    branches: [ main, refactor-vers ]
  pull_request:
    branches: [ main, refactor-vers ]

jobs:
  avro-compat:
    name: Avro Schema Compatibility
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check Avro schemas
        run: |
          echo "Checking Avro schema syntax..."
          for schema in contracts/avro/*.avsc; do
            echo "Validating $schema"
            python3 -c "import json; json.load(open(\"$schema\"))"
          done
          echo "âœ… All Avro schemas are valid JSON"

  lint-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [voice-gateway, nlu-service, nlg-service, dm-service]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: services/${{ matrix.service }}/package-lock.json
      - name: Install dependencies
        working-directory: services/${{ matrix.service }}
        run: npm ci
      - name: Build
        working-directory: services/${{ matrix.service }}
        run: npm run build

  python-lint:
    name: Python Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [stt-service, tts-service]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        working-directory: services/${{ matrix.service }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [avro-compat, lint-test, python-lint]
    steps:
      - uses: actions/checkout@v4
      - name: Build voice-gateway
        run: docker build -t voice-gateway:test services/voice-gateway/
      - name: Build stt-service
        run: docker build -t stt-service:test services/stt-service/
      - name: Build nlu-service
        run: docker build -t nlu-service:test services/nlu-service/
      - name: Build nlg-service
        run: docker build -t nlg-service:test services/nlg-service/
      - name: Build tts-service
        run: docker build -t tts-service:test services/tts-service/
      - name: Build dm-service
        run: docker build -t dm-service:test services/dm-service/

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: [docker-build]
    steps:
      - uses: actions/checkout@v4
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "voice-gateway:test"
          format: "sarif"
          output: "trivy-results.sarif"
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results.sarif"

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript,typescript,python,java
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
